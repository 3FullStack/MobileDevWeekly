{"name":"MobileDevWeekly","tagline":"平安科技移动开发二队技术周报","body":"# [平安科技移动开发二队技术周报](https://github.com/PaicHyperionDev/MobileDevWeekly)（第三十三期）\r\n\r\n## Android开发\r\n\r\n#### 1）[解读2015之Android篇：横向扩张、平稳发展](http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&mid=401946629&idx=1&sn=bb9935b06886689ee35f977df0d55d77&scene=0#wechat_redirect)\r\n\r\nAndroid经历了大概7年的野蛮成长之后，2015年的Android应该是平稳发展的一年。从Umeng最新的报告能够看出国内Android设备已经占到了62.3%，大概是iOS的两倍，毫无疑问Android已经稳稳的坐到了手机操作系统第一的宝座。如今整个Android生态链已经形成，几乎每一个细分的领域都有相应的厂商，已经很难挖掘到新的空白地带，无论是App的种类、开发工具、分发渠道、测试平台等等都已经初步形成了规模。\r\n\r\n#### 2）[Android开发中的MVP架构](http://www.jianshu.com/p/7567ed0d1853)\r\n\r\n最近越来越多的人开始谈论架构。我周围的同事和工程师也是如此。尽管我还不是特别深入理解MVP和DDD，但是我们的新项目还是决定通过MVP来构建。这篇文章是我通过研究和学习各种文章以及专题讨论所总结出来的。\r\n\r\n#### 3）[Fresco图片加载框架（一）源码简要分析](http://www.cnblogs.com/chiefhsing/articles/5071807.html)\r\n\r\n本文对Facebook出品的图片加载缓存库Fresco进行整体架构的一个分析，帮助开发者入门Fresco源码分析。\r\n\r\n#### 4）[LeakCanary 内存泄露监测原理研究](http://www.jianshu.com/p/5ee6b471970e)\r\n\r\nLeakCanary是安卓中用来检测内存泄露的小工具，它能帮助我们提早发现代码中隐藏的bug, 降低应用中内存泄露以及OOM产生的概率。\r\n\r\n#### 5）[Android单元测试研究与实践](http://tech.meituan.com/Android_unit_test.html)\r\n\r\n处于高速迭代开发中的Android项目往往需要除黑盒测试外更加可靠的质量保障，这正是单元测试的用武之地。单元测试周期性对项目进行函数级别的测试，在良好的覆盖率下，能够持续维护代码逻辑，从而支持项目从容应对快速的版本更新。\r\n\r\n#### 6）[关于『65535问题』的一点研究与思考](http://blog.csdn.net/zhaokaiqiang1992/article/details/50412975)\r\n\r\n目前来说，对于使用Android Studio的朋友来说，MultiDex应该不陌生，就是Google为了解决『65535天花板』问题而给出的官方解决方案，但是这个方案并不完美，所以美团又给出了异步加载Dex文件的方案。今天这篇文章是我最近研究MultiDex方案的一点收获，最后还留了一个没有解决的问题，如果你有思路的话，欢迎交流！\r\n\r\n#### 7）[Flux架构在Android中的应用](http://www.devtf.cn/?hmsr=toutiao.io&p=1193)\r\n\r\nFacebook 开发Flux是为了将它应用到网页和javaScript 上，所以如果我想把它应用到Android项目中，就必须这个项目作一定程度的修改。经过一些调整（主要是 dispatcher 和 view 访问数据的方式），结合 Square 开发的 Otto 库，Android版的Flux架构库就诞生了。\r\n\r\n## iOS开发\r\n\r\n#### 1）[ReactiveCocoa v2.5 源码解析之架构总览](http://blog.leichunfeng.com/blog/2015/12/25/reactivecocoa-v2-dot-5-yuan-ma-jie-xi-zhi-jia-gou-zong-lan/#jtss-tsina)\r\n\r\nReactiveCocoa 是一个 iOS 中的函数式响应式编程框架，它受 Functional Reactive Programming 的启发，是 Justin Spahr-Summers 和 Josh Abernathy 在开发 GitHub for Mac 过程中的一个副产品，它提供了一系列用来组合和转换值流的 API 。\r\n\r\n#### 2）[使用 JS 构建跨平台的原生应用：React Native iOS 通信机制初探](http://taobaofed.org/blog/2015/12/30/the-communication-scheme-of-react-native-in-ios/)\r\n\r\n在初识 React Native 时，非常令人困惑的一个地方就是 JS 和 Native 两个端之间是如何相互通信的。本篇文章对 iOS 端 React Native 启动时的调用流程做下简要总结，以此窥探其背后的通信机制。\r\n\r\n#### 3）[UITableView性能优化](http://southpeak.github.io/blog/2015/12/20/perfect-smooth-scrolling-in-uitableviews/)\r\n\r\n本文尝试解释了iOS绘图系统(没有使用OpenGL)的主要思路。当然有些看起来很模糊，但事实上这只是一些方向，你应该朝着这些方向来检查你的代码以找出影响滚动性能的所有问题。\r\n\r\n## 技术纵横\r\n\r\n#### 1）[近几年前端技术盘点以及 2016 年技术发展方向](http://www.barretlee.com/blog/2015/12/10/after-framework-we-gonna-to-hug-data/)\r\n\r\nWeb 发展了几十个春秋，风起云涌，千变万化。我很庆幸自己没有完整地经历过这些年头，而是站在前人的肩膀上行走。Web 技术发展的速度让人感觉那几乎不是继承式的迭代，而是一次又一次的变革，一次又一次的创造。这几年的前端，更为之甚！\r\n\r\n#### 2）[架构师于小波：魅族实时消息推送架构](http://www.csdn.net/article/2015-12-22/2826542)\r\n\r\n本文是根据魅族架构师于小波在msup和魅族联合举办的#魅族技术开放日#的演讲中的分享内容整理而成，于小波分享了魅族实时消息推送架构的其中遇到的坑和一些心得体会。\r\n\r\n#### 3）[全站 HTTPS 来了](http://bugly.qq.com/bbs/forum.php?mod=viewthread&tid=417)\r\n\r\n全站 HTTPS 能够带来怎样的优势？HTTPS 的原理又是什么？同时，阻碍 HTTPS 普及的困难是什么？本文综合参考多种资料并经过实践验证，探究 HTTPS 的基础原理，分析基本的 HTTPS 通信过程，迎接全站 HTTPS 的来临。\r\n\r\n#### 4）[Redux系列x：源码分析](http://segmentfault.com/a/1190000004209897)\r\n\r\nredux的源码很简洁，除了applyMiddleware比较绕难以理解外，大部分原理还是比较简洁易懂的，本文尝试做一次分析。\r\n\r\n#### 5）[Java Functional Reactive 编程](https://realm.io/cn/news/droidcon-gomez-functional-reactive-programming/)\r\n\r\n我们如何才能将传统的变量式线程同步管理转移到基于数据的异步流式编程上？试试 Reactive Programming 吧！这篇分享包含的主题有： reactive 扩展，observers ，以及 RxJava 的工作原理。尽管不容易上手，但是一旦上手，其乐无穷。\r\n\r\n## 开源函数库与工具\r\n\r\n#### 1） [React 编程规范](https://github.com/dwqs/react-style-guide)\r\n\r\nAirbnb的React和JSX的编程规范。\r\n\r\n#### 2）[VWInstantRun](https://github.com/wangshengjia/VWInstantRun)\r\n\r\n一个实现Instant Run的XCode插件。\r\n\r\n![](https://raw.githubusercontent.com/wangshengjia/VWInstantRun/master/run_swift_code_1.gif)\r\n\r\n#### 3）[FileDownloader](https://github.com/lingochamp/FileDownloader)\r\n\r\n一个基于okhttp的文件下载器，支持多任务，断点续传，高并发，简单易用等特点。\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}