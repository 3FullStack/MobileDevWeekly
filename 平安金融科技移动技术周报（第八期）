# [平安金融科技移动技术周报](https://github.com/PaicHyperionDev/MobileDevWeekly)（第八期）

## 原创专题

#### 1）[SuperSpider—打造功能强大的爬虫利器](http://139.196.14.76/t/superspider/245) @罗嘉飞（产品服务组）

笔者之前在腾讯的安全部门，需要编写扫描器，而扫描器一个重要的部分就是爬虫，因此此文必是总结笔者在编写爬虫过程中的经验。

#### 2）[viewport与设备适配](http://139.196.14.76/t/viewport/243) @曾文富（运营服务组）

本文是对 Web 前端开发中 viewport 和设备适配的一个讨论和总结，主要包括：1）viewport的通俗理解；2）H5 移动端适配方案的讨论。

## 业界新闻

#### 1）[2015移动安全漏洞年报](http://jaq.alibaba.com/community/art/show?articleid=194)

2015是不平凡的一年，各界媒体对移动应用的漏洞关注度也越来越高，漏洞的产生不仅带来用户设备与信息的安全影响，也给企业带来业务或声誉上的损失。阿里聚安全每周对国内外50家著名安全公司、媒体、漏洞平台的态势进行分析，国内外移动安全事件和资讯的关注依然是围绕操作系统和移动应用的技术风险展开，其中国内更加关注移动应用的漏洞风险。本文数据结论来自于阿里聚安全对业界风险态势的统计。

#### 2）[2016 谷歌 I/O 大会开放报名须知](https://mp.weixin.qq.com/s?__biz=MzAwODY4OTk2Mg==&mid=402829884&idx=1&sn=810877c184b0a14d1f32c4f13d734ff8&scene=0&key=710a5d99946419d956f6c0f0877633ae3d0d073e775c4337d0c6b164ff59b58969be46011613d71aa9bf80741baf272f&ascene=0&uin=NTk4MzU3OTAw&devicetype=iMac+MacBookPro12%2C1+OSX+OSX+10.11.1+build(15B42)&version=11020201&pass_ticket=cfeFGr%2B4EMj4NAtCswGi6IHOyW5B40PfOXA%2BWv7zT%2BVbZJ%2BZVc7w6g7T%2FNmS%2BYdW)

今天，谷歌公司向全球公布了今年 I/O 大会的信息更新，并宣布了3月8日（北京时间3月9日凌晨）是开放报名登记日。有兴趣参加 I/O 大会的读者 请关注 I/O 大会官方页面：events.google.com/io2016。

## Android开发

#### 1）[红包照片客户端开发那些事](https://mp.weixin.qq.com/s?__biz=MzAwNDY1ODY2OQ==&mid=401327503&idx=1&sn=1d9fac7b648c3494d312da962f53bfbd&scene=0&key=710a5d99946419d98bd8be3ef8af2e5cfdc85d6b1a08a2f6827226eaf8e8e013ae84a46befaa865bb4f6cedd0976d286&ascene=0&uin=NTk4MzU3OTAw&devicetype=iMac+MacBookPro12%2C1+OSX+OSX+10.11.1+build(15B42)&version=11020201&pass_ticket=dRnY48O%2BgarTbDCIH2D45%2FURN5E8VuAG7ygK26eilQ9rwKg3cVKI6MaFeoIZuosj)

猴年除夕活动已经落下帷幕，回头来看红包照片这一套系统，对于客户端而言，区别于普通的朋友圈图片设计差异是否大？它是否复杂？ 客户端都关注些什么？本文从一个 Android 客户端开发者的角度出发，对以上问题进行了阐述。

#### 2）[我们在平时或面试遇到这些问题时，我们应该怎么回答？](https://www.zhihu.com/question/40909636/answer/88775539)

知乎上关于 Android 面试题的一个问答。

#### 3）[Android开发必备知识：为什么说Kotlin值得一试](http://mp.weixin.qq.com/s?__biz=MzA3NTYzODYzMg==&mid=404087761&idx=1&sn=d80625ee52f860a7a2ed4c238d2151b6&scene=0#wechat_redirect)

用 Kotlin 替代 Java 开发你的程序，无论是 Android 还是 Server，你都能像之前写 Java 一样思考，同时又能享受到新一代编程语言的特性。

#### 4）[Android Support Library 23.2有哪些新东西](http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2016/0226/3996.html)

当我们谈论安卓支持库（Android Support Library）的时候，应该意识到这不是一个库，而是一套库的集合 ，它们旨在无需新平台的情况下，提供API的向后兼容版本以及新功能。  23.2 版本添加了一些新的支持库，同时还为现有的库增加了新特性。

#### 5）[ClassyShark——apk分析利器](http://w4lle.github.io/2016/02/15/ClassyShark%E2%80%94%E2%80%94%E5%88%86%E6%9E%90apk%E5%88%A9%E5%99%A8/)

ClassyShark 是一款可以查看 Android 可执行文件的浏览工具，支持.dex, .aar, .so, .apk, .jar, .class, .xml 等文件格式，分析里面的内容包括 classes.dex 文件，包、方法数量、类、字符串、使用的 NativeLibrary 等。

#### 6）[BottomSheets源码解析](https://github.com/android-cjj/SourceAnalysis)

2月25日早上，Android官网更新了Support Lirary 23.2版本，其中Design Support Library库新加一个新的东西：Bottom Sheets。然后，第一时间写了篇Teach you how to use Design Support Library: Bottom Sheets，只是简单的讲了它的使用和使用的一些规范。这篇文章我带大家看看BottomSheetBehavior的源码。

## iOS开发

#### 1）[我是如何利用 Xcode 调试开发微信消息预览插件的](http://mp.weixin.qq.com/s?__biz=MjM5NTIyNTUyMQ==&mid=456678545&idx=1&sn=70f5784541fc15d5af252a15a400900d&scene=0#wechat_redirect)

相对于 Android 来说，iOS 安全一直是被忽视的领域。就拿微信来说，由于微信的代码没有混淆，所以可以很方便地对它进行修改。在本文中，作者介绍了通过动态库注入来修改微信的技术细节。

#### 2）[模块化与解耦](http://blog.cnbluebox.com/blog/2015/11/28/module-and-decoupling/)

本文主要讲述了在iOS开发过程中，模块化工程架构的一种组织方式，本文主要讲述基于cocoapods来做模块化的方案，详细讲述了iOS开发怎么进行模块划分的内容，主要会在以下方面做阐述：

* 为什么要做模块化
* 模块设计原则
* 模块化开发有哪些优点和缺点
* 解耦与通信

#### 3）[告别“伪连接”！如何高效检测iOS中的真实连接状态](http://mp.weixin.qq.com/s?__biz=MzA3ODg4MDk0Ng==&mid=402123943&idx=1&sn=9de12e74c32510a245d6195836653d5f#rd)

网络连接状态检测对于我们的iOS app开发来说是一个非常通用的需求。为了更好的用户体验，我们会在无网络时展现本地或者缓存的内容，并对用户进行合适的提示。但事实上，当前iOS开发者们普遍使用的网络检测框架，实际上都无法帮助我们检测真正的网络连接状态；它们所能检测的只是本地连接状态。

#### 4）[Swift 性能探索和优化分析](https://onevcat.com/2016/02/swift-performance/)

Apple 在推出 Swift 时就将其冠以先进，安全和高效的新一代编程语言之名。前两点在 Swift 的语法和语言特性中已经表现得淋漓尽致：像是尾随闭包，枚举关联值，可选值和强制的类型安全等都是 Swift 显而易见的优点。但是对于高效一点，就没有那么明显了。在 2014 年 WWDC 大会上 Apple 宣称 Swift 具有超越 Objective-C 的性能，甚至某些情况下可以媲美和超过 C。

#### 5）[Swift编程的15个技巧](http://geek.csdn.net/news/detail/58593)

相对于Objective-C，Swift是一种编译代码时速度更快、安全性与可靠性更高、同时具有可预测性的语言。下面我们列出了在实践中使用这种新语言时，所获取一些Swift使用技巧。这些技巧有助于让开发者编写出更干净的代码，并能帮助更熟悉Objective-C的程序员适应Swift编程，同时适用于在Swift上具有各种背景经历的人，请继续往下看。

## 技术纵横

#### 1）[Maven和Gradle对比](http://www.importnew.com/18008.html)

Java世界中主要有三大构建工具：Ant、Maven和Gradle。经过几年的发展，Ant几乎销声匿迹、Maven也日薄西山，而Gradle的发展则如日中天。笔者有幸见证了Maven的没落和Gradle的兴起。Maven的主要功能主要分为5点，分别是依赖管理系统、多模块构建、一致的项目结构、一致的构建模型和插件机制。我们可以从这五个方面来分析一下Gradle比起Maven的先进之处。

#### 2）[启用全站HTTPS后不仅更安全而且更快 看淘宝是如何做到的](http://mp.weixin.qq.com/s?__biz=MzAxNDEwNjk5OQ==&mid=402402866&idx=1&sn=f3fde8ece13d51397c12f1a08713ebeb&scene=0#wechat_redirect)

电商启用全站HTTPS是一件门槛极高的事情，它需要投入巨大的资源，不仅是人力、财力等方面，而且对技术能力也提出了极为苛刻的要求。一般来说，普通电商只会在登录和交易这些“关键”环节启用HTTPS。而目前，阿里巴巴是全球唯一大规模启用电商平台全站HTTPS的公司。

## 技术人生

#### 1）[你每天90%的注意力，都浪费在了鸡毛蒜皮上](http://mp.weixin.qq.com/s?__biz=MzA4ODM1MTMzMQ==&mid=403612871&idx=1&sn=3ec8f01008b4ffec486e357eed8c5bb7&scene=0#wechat_redirect)

对于各方面资源不够丰富的人来说，唯一能做的，就是把自己本就不多的资源（时间、精力、金钱乃至勇气）聚拢起来，投注到做一件事情上，认真、踏实地去做，争取做到最好，做到极致。而三心二意、畏葸不前、瞻前顾后、贪多求快、跟风冒进都是大忌。

#### 2）[关于 App 程序员泡沫](http://blog.jobbole.com/98420/)

做开发快七年了，对于程序员，外行人总有着数不完的讽刺和误解，但是我都懒得去解释，代码搬运工人也好，民工也罢，随他们去说吧。但是网上最近流传的程序员泡沫，尤其是APP程序员泡沫的文章导致很多我们的年轻的同行产生了疑惑，所以我这个隐藏了很久的能言善辩的老程序员，出山来聊一聊这个APP程序员泡沫的话题。
